/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rsa.project;

import java.io.File;
import java.io.IOException;

import javax.swing.JFileChooser;


/**
 *
 * @author fgg12
 */
public class Form extends javax.swing.JFrame {

    
    private Matrix[] leftAndRightMatrixes;
    private Matrix resultMatrix;
    
    /**
     * Creates new form MainForm
     */
    public Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        labelM = new javax.swing.JLabel();
        labelN = new javax.swing.JLabel();
        labelK = new javax.swing.JLabel();
        textFieldM = new javax.swing.JTextField();
        textFieldN = new javax.swing.JTextField();
        textFieldK = new javax.swing.JTextField();
        ButtonGenerate = new javax.swing.JButton();
        ButtonOpen = new javax.swing.JButton();
        numberOfThreadsTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        multyThreadetLabel = new javax.swing.JLabel();
        singleThreadetLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelM.setText("m:");

        labelN.setText("n:");

        labelK.setText("k:");

        ButtonGenerate.setText("generate and calculate Matrices");
        ButtonGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGenerateActionPerformed(evt);
            }
        });

        ButtonOpen.setText("open file and calculate matrices");
        ButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOpenActionPerformed(evt);
            }
        });

        jLabel1.setText("number of threads");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelM)
                            .addComponent(labelN)
                            .addComponent(labelK))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFieldK, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(textFieldN)
                            .addComponent(textFieldM))
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(numberOfThreadsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ButtonGenerate)
                        .addGap(100, 100, 100)
                        .addComponent(ButtonOpen))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(multyThreadetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(91, 91, 91)
                    .addComponent(singleThreadetLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(197, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelM)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numberOfThreadsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelN)
                    .addComponent(textFieldN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelK)
                    .addComponent(textFieldK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonGenerate)
                    .addComponent(ButtonOpen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(multyThreadetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(247, Short.MAX_VALUE)
                    .addComponent(singleThreadetLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(161, 161, 161)))
        );

        pack();
    }// </editor-fold>                        

    private void ButtonOpenActionPerformed(java.awt.event.ActionEvent evt) {                                           
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            try {
				Matrix[] matrixes = IOFileManager.loadMatrix(selectedFile.getAbsolutePath());
				multiply(matrixes);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }
        
    }                                          

    private void ButtonGenerateActionPerformed(java.awt.event.ActionEvent evt) {                                               
    	try {
			leftAndRightMatrixes = Matrix.generate(Integer.parseInt(this.textFieldM.getText()), Integer.parseInt(this.textFieldN.getText()), Integer.parseInt(this.textFieldK.getText()));
			multiply(leftAndRightMatrixes);
		} catch (NumberFormatException | InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }

	private void multiply(Matrix[] leftAndRightMatrixes) {
        
        long t = System.currentTimeMillis();
        MatrixMultiplication.linearMultiply(leftAndRightMatrixes[0], leftAndRightMatrixes[1]);
        singleThreadetLabel1.setText("single finished for " + (System.currentTimeMillis() - t));
        
         
        t = System.currentTimeMillis();
        MatrixMultiplication.multiplyThreading(leftAndRightMatrixes[0], leftAndRightMatrixes[1], Integer.parseInt(numberOfThreadsTextField.getText()));
        multyThreadetLabel.setText("multiThreaded finished for " + (System.currentTimeMillis() - t));
	}                                              

    /**
     * @param args the command line arguments
     */
    public static void start(int m, int n, int k) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton ButtonGenerate;
    private javax.swing.JButton ButtonOpen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelK;
    private javax.swing.JLabel labelM;
    private javax.swing.JLabel labelN;
    private javax.swing.JLabel multyThreadetLabel;
    private javax.swing.JTextField numberOfThreadsTextField;
    private javax.swing.JLabel singleThreadetLabel1;
    private javax.swing.JTextField textFieldK;
    private javax.swing.JTextField textFieldM;
    private javax.swing.JTextField textFieldN;
    // End of variables declaration                   
}
